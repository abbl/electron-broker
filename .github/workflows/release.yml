name: Release
on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'next'
      - '*.*'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'next'
      - '*.*'

env:
  CI: true

permissions:
  contents: read # for checkout

jobs:
  install:
    name: Install dependencies
    uses: ./.github/workflows/install.yml

  unit-tests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Download install artifact
        uses: actions/download-artifact@v4
        with:
          name: install

      - name: Untar files
        run: tar -xf install.tar

      - name: Run tests
        run: npm test

  functional-tests:
    name: Test electron@latest
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Download install artifact
        uses: actions/download-artifact@v4
        with:
          name: install

      - name: Untar files
        run: tar -xf install.tar

      - name: Run tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test:functional

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [unit-tests, functional-tests]
    if: ${{ contains(join(needs.*.result, ','), 'success' ) && github.event_name == 'push'}}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
