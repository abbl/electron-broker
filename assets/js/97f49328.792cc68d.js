"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[464],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(7294);function a(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(7462),a=n(7294),o=n(2389),i=n(3725),s=n(6010),l="tabItem_LplD";function c(e){var t,n,o,c=e.lazy,u=e.block,p=e.defaultValue,d=e.values,m=e.groupId,k=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=d?d:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,i.lx)(b,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===p?p:null!=(t=null!=p?p:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=v[0])?void 0:o.props.value;if(null!==f&&!b.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,i.UB)(),y=g.tabGroupChoices,w=g.setTabGroupChoices,N=(0,a.useState)(f),T=N[0],x=N[1],C=[],E=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var I=y[m];null!=I&&I!==T&&b.some((function(e){return e.value===I}))&&x(I)}var S=function(e){var t=e.currentTarget,n=C.indexOf(t),r=b[n].value;r!==T&&(E(t),x(r),null!=m&&w(m,r))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.currentTarget)+1;n=C[r]||C[0];break;case"ArrowLeft":var a=C.indexOf(e.currentTarget)-1;n=C[a]||C[C.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":u},k)},b.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return C.push(e)},onKeyDown:j,onFocus:S,onClick:S},o,{className:(0,s.Z)("tabs__item",l,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),c?(0,a.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,o.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}},6862:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return v},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(9877),s=n(8215),l=["components"],c={sidebar_position:2},u="Client",p={unversionedId:"usage/client",id:"usage/client",title:"Client",description:"Introduction",source:"@site/docs/usage/client.mdx",sourceDirName:"usage",slug:"/usage/client",permalink:"/electron-broker/docs/usage/client",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/client.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Controllers",permalink:"/electron-broker/docs/usage/controllers"},next:{title:"Middleware",permalink:"/electron-broker/docs/usage/middleware"}},d={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Send",id:"send",level:2},{value:"Invoke",id:"invoke",level:2},{value:"InvokeRaw",id:"invokeraw",level:2},{value:"Subscribe",id:"subscribe",level:2},{value:"SetMiddleware",id:"setmiddleware",level:2},{value:"SetTimeout",id:"settimeout",level:2}],k={toc:m};function v(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"client"},"Client"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"As opposed to the usage of multiple Event Emitters (such as ",(0,o.kt)("inlineCode",{parentName:"p"},"ipcMain")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ipcRenderer"),"),\nthe broker exposes a single ",(0,o.kt)("inlineCode",{parentName:"p"},"BrokerClient")," class. Which acts as a universal message\nbroadcaster on every process. It also does not accept multiple arguments as message payload,\nit uses one argument instead."),(0,o.kt)("p",null,"Building of ",(0,o.kt)("inlineCode",{parentName:"p"},"BrokerClient")," object is done by the usage of ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," class method called ",(0,o.kt)("inlineCode",{parentName:"p"},"createClient()"),".\nEach instance it returns is ",(0,o.kt)("strong",{parentName:"p"},"unique"),". Therefore, middleware bound to one instance, won't be present\nin another one.  "),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{14} title="index.tsx"',"{14}":!0,title:'"index.tsx"'},"import 'reflect-metadata';\nimport { BrokerClient, Broker } from 'electron-broker';\n\nlet broker: Broker;\nlet client: BrokerClient;\n\nasync function createBroker() {\n  broker = await BrokerFactory.createRendererBroker({\n    secure: true,\n  });\n\n  broker.start();\n\n  client = broker.createClient();\n}\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{14} title="index.jsx"',"{14}":!0,title:'"index.jsx"'},"import 'reflect-metadata';\nimport { BrokerClient, Broker } from 'electron-broker';\n\nlet broker;\nlet client;\n\nasync function createBroker() {\n  broker = await BrokerFactory.createRendererBroker({\n    secure: true,\n  });\n\n  broker.start();\n\n  client = broker.createClient();\n}\n")))),(0,o.kt)("h2",{id:"send"},"Send"),(0,o.kt)("p",null,"Synchronously emits the message on a specific pattern, and does not listen for the response.\nIt takes the pattern as the first argument and payload as the second one."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="send.ts"',"{5}":!0,title:'"send.ts"'},"function incrementByValue(): void {\n  const pattern = 'increment-by-value';\n  const payload = { value: 2136.99 };\n\n  broker.send(pattern, payload);\n}\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="send.js"',"{5}":!0,title:'"send.js"'},"function incrementByValue() {\n  const pattern = 'increment-by-value';\n  const payload = { value: 2136.99 };\n\n  broker.send(pattern, payload);\n}\n")))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"send()")," method only triggers ",(0,o.kt)("inlineCode",{parentName:"p"},"onRequest()")," part of ",(0,o.kt)("inlineCode",{parentName:"p"},"Middleware")," interface."))),(0,o.kt)("h2",{id:"invoke"},"Invoke"),(0,o.kt)("p",null,"Asynchronously emits the message on a specific pattern, and listens for the response.\nIt takes the pattern as the first argument and payload as the second one."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="invoke.ts"',"{5}":!0,title:'"invoke.ts"'},"async function checkWeather(): Promise<string> {\n  const pattern = 'check-weather';\n  const payload = { city: 'Warsaw' }; \n\n  return broker.invoke(pattern, payload);\n}\n\nconst weather = await checkWeather();\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="invoke.js"',"{5}":!0,title:'"invoke.js"'},"async function checkWeather() {\n  const pattern = 'check-weather';\n  const payload = { city: 'Warsaw' }; \n\n  return broker.invoke(pattern, payload);\n}\n\nconst weather = await checkWeather();\n")))),(0,o.kt)("h2",{id:"invokeraw"},"InvokeRaw"),(0,o.kt)("p",null,"Asynchronously emits the message on a specific pattern, and listens for the response.\nBut upon the response, it returns the ",(0,o.kt)("inlineCode",{parentName:"p"},"BrokerEvent")," object instead of its ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," property,\nas in ",(0,o.kt)("inlineCode",{parentName:"p"},"invoke()")," method."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="invoke-raw.ts"',"{5}":!0,title:'"invoke-raw.ts"'},"async function checkWeatherRaw(): Promise<BrokerEvent> {\n  const pattern = 'check-weather';\n  const payload = { city: 'Warsaw' };\n  \n  return broker.invokeRaw(pattern, payload);\n}\n\nconst brokerEvent = await checkWeatherRaw();\n\n// Access the results of the message\nconsole.log(brokerEvent.data);\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5} title="invoke-raw.js"',"{5}":!0,title:'"invoke-raw.js"'},"async function checkWeatherRaw() {\n  const pattern = 'check-weather';\n  const payload = { city: 'Warsaw' };\n  \n  return broker.invokeRaw(pattern, payload);\n}\n\nconst brokerEvent = await checkWeatherRaw();\n\n// Access the results of the message\nconsole.log(brokerEvent.data);\n")))),(0,o.kt)("h2",{id:"subscribe"},"Subscribe"),(0,o.kt)("p",null,"Creates the subscriber, which listens for messages on the specific pattern by usage listener function."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="subscriber.ts"',title:'"subscriber.ts"'},"interface UserSessionDto {\n  username: string;\n}\n\nconst oneTimeSubscriber = broker.subscribe<UserSessionDto>(\n  'user-session-start', \n  (data, brokerEvent) => { // brokerEvent arguement is optional.\n    console.log(`[LOG] Session for user ${data.username} has been initialised.`)\n    \n    // Remove the subscription after receiving the message. \n    subscriber.unsubscribe();\n  }\n)\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="subscriber.js"',title:'"subscriber.js"'},"const oneTimeSubscriber = broker.subscribe(\n  'user-session-start', \n  (data, brokerEvent) => { // brokerEvent arguement is optional.\n    console.log(`[LOG] Session for user ${data.username} has been initialised.`)\n    \n    // Remove the subscription after receiving the message. \n    subscriber.unsubscribe();\n  }\n)\n")))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"  Messages received through subscribers ",(0,o.kt)("strong",{parentName:"p"},"don't")," trigger the execution of middlewares."))),(0,o.kt)("h2",{id:"setmiddleware"},"SetMiddleware"),(0,o.kt)("p",null,"Sets the middlewares, that will be executed after usage of ",(0,o.kt)("inlineCode",{parentName:"p"},"send()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"invoke()"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"invokeRaw()")," methods."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="middleware.ts"',title:'"middleware.ts"'},"import {BrokerClient, Middleware, ExecutionContext} from 'electron-broker';\n\nclass MessageLogMiddleware implements Middleware {\n  public onRequest(context: ExecutionContext) {\n    const { eventId } = context.brokerEvent;\n\n    console.log(`[LOG] Received message with eventId: ${eventId}`)    \n  }\n\n  public onResponse(context: ExecutionContext) {\n    const { eventId } = context.brokerEvent;\n\n    console.log(`[LOG] Sent message with eventId: ${eventId}`)    \n  }\n}\n\nbrokerClient.setMiddleware([new MessageLogMiddleware()])\n"))),(0,o.kt)(s.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="middleware.js"',title:'"middleware.js"'},"import {BrokerClient, Middleware, ExecutionContext} from 'electron-broker';\n\nclass MessageLogMiddleware {\n  public onRequest(context) {\n    const { eventId } = context.brokerEvent;\n\n    console.log(`[LOG] Received message with eventId: ${eventId}`)    \n  }\n\n  public onResponse(context) {\n    const { eventId } = context.brokerEvent;\n\n    console.log(`[LOG] Sent message with eventId: ${eventId}`)    \n  }\n}\n\nbrokerClient.setMiddleware([new MessageLogMiddleware()])\n")))),(0,o.kt)("h2",{id:"settimeout"},"SetTimeout"),(0,o.kt)("p",null,"Sets the number of seconds that client will wait for the answer to the message, by default it fallbacks to 30 seconds."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="timeout.ts"',title:'"timeout.ts"'},"brokerClient.setTimeout(30);\n")))}v.isMDXComponent=!0}}]);