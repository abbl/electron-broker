"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[678],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,k=m["".concat(l,".").concat(u)]||m[u]||c[u]||o;return t?r.createElement(k,i(i({ref:n},d),{},{components:t})):r.createElement(k,i({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8215:function(e,n,t){t.d(n,{Z:function(){return a}});var r=t(7294);function a(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(7462),a=t(7294),o=t(2389),i=t(3725),s=t(6010),l="tabItem_LplD";function p(e){var n,t,o,p=e.lazy,d=e.block,c=e.defaultValue,m=e.values,u=e.groupId,k=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,i.lx)(h,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===c?c:null!=(n=null!=c?c:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=f[0])?void 0:o.props.value;if(null!==w&&!h.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,i.UB)(),g=v.tabGroupChoices,y=v.setTabGroupChoices,N=(0,a.useState)(w),j=N[0],C=N[1],x=[],B=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=u){var T=g[u];null!=T&&T!==j&&h.some((function(e){return e.value===T}))&&C(T)}var W=function(e){var n=e.currentTarget,t=x.indexOf(n),r=h[t].value;r!==j&&(B(n),C(r),null!=u&&y(u,r))},P=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=x.indexOf(e.currentTarget)+1;t=x[r]||x[0];break;case"ArrowLeft":var a=x.indexOf(e.currentTarget)-1;t=x[a]||x[x.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},k)},h.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return x.push(e)},onKeyDown:P,onFocus:W,onClick:W},o,{className:(0,s.Z)("tabs__item",l,null==o?void 0:o.className,{"tabs__item--active":j===n})}),null!=t?t:n)}))),p?(0,a.cloneElement)(f.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function d(e){var n=(0,o.Z)();return a.createElement(p,(0,r.Z)({key:String(n)},e))}},8900:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=t(9877),s=t(8215),l=["components"],p={sidebar_position:1},d="Broker process setup",c={unversionedId:"getting-started/broker-process-setup",id:"getting-started/broker-process-setup",title:"Broker process setup",description:"Introduction",source:"@site/docs/getting-started/broker-process-setup.mdx",sourceDirName:"getting-started",slug:"/getting-started/broker-process-setup",permalink:"/electron-broker/docs/getting-started/broker-process-setup",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/broker-process-setup.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/electron-broker/docs/getting-started/installation"},next:{title:"Client process setup",permalink:"/electron-broker/docs/getting-started/client-process-setup"}},m={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Project structure",id:"project-structure",level:2},{value:"Setup",id:"setup",level:2},{value:"Preload.js",id:"preloadjs",level:3},{value:"BrowserWindow",id:"browserwindow",level:3},{value:"ChildProcess",id:"childprocess",level:3}],k={toc:u};function f(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"broker-process-setup"},"Broker process setup"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"In this section, you'll learn to how to bind your ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserWindow")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildProcess")," instance to\na ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," object. Which created on the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," process works as a bridge between all of the application\nprocesses. Besides that function, it can also handle and send its messages.\nIt's a ",(0,o.kt)("strong",{parentName:"p"},"crucial")," part of the library, so make sure you set it up and bind your processes to it."),(0,o.kt)("h2",{id:"project-structure"},"Project structure"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"...\nsrc/\n  main/\n    main.ts\n    preload.js\n  renderer/\n    index.html\n    index.tsx\n...\n"))),(0,o.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"...\nsrc/\n  main/\n    main.js\n    preload.js\n  renderer/\n    index.html\n    index.jsx\n...\n")))),(0,o.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"File"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"main.ts/js"),(0,o.kt)("td",{parentName:"tr",align:"center"},"An entry point file for ",(0,o.kt)("inlineCode",{parentName:"td"},"main")," process.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"preload.js"),(0,o.kt)("td",{parentName:"tr",align:"center"},"A script exposing Electron internals to ",(0,o.kt)("inlineCode",{parentName:"td"},"renderer")," process.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"index.html"),(0,o.kt)("td",{parentName:"tr",align:"center"},"An html file for renderer ",(0,o.kt)("inlineCode",{parentName:"td"},"process"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"index.tsx/jsx"),(0,o.kt)("td",{parentName:"tr",align:"center"},"An entry point file for ",(0,o.kt)("inlineCode",{parentName:"td"},"renderer")," process."))))),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("h3",{id:"preloadjs"},"Preload.js"),(0,o.kt)("p",null,"By default ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserWindow")," has ",(0,o.kt)("inlineCode",{parentName:"p"},"nodeIntegration")," disabled and ",(0,o.kt)("inlineCode",{parentName:"p"},"contextIsolation")," enabled, and to be able\nto send and receive messages from the ",(0,o.kt)("inlineCode",{parentName:"p"},"renderer")," process, you need to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"preload.js")," file, that will expose functions\nrequired by ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"renderer")," process."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You can enable ",(0,o.kt)("inlineCode",{parentName:"p"},"nodeIntegration")," and disable ",(0,o.kt)("inlineCode",{parentName:"p"},"contextIsolation")," to skip setup of preload.js file,\nbut it's considered ",(0,o.kt)("strong",{parentName:"p"},"UNSAFE")," to expose whole ",(0,o.kt)("strong",{parentName:"p"},"NodeJS API")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"renderer")," process."))),(0,o.kt)("p",null,"You can create the ",(0,o.kt)("inlineCode",{parentName:"p"},"preload.js")," file anywhere in your project,\nbut for sake of this example will we will create it in the same folder as our main.js file,\nand this is how ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," requires it to look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/main/preload.js"',title:'"src/main/preload.js"'},"const { contextBridge, ipcRenderer } = require('electron');\n\ncontextBridge.exposeInMainWorld('broker', {\n  send: (channel, data) => {\n    ipcRenderer.send(channel, data);\n  },\n  on: (channel, handler) => {\n    ipcRenderer.on(channel, (event, ...args) => {\n      handler(args[0]);\n    });\n  },\n  removeListener: (channel, handler) => {\n    ipcRenderer.removeListener(channel, handler);\n  },\n});\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If any definition of these methods differs, you might end up with unexpected behavior."))),(0,o.kt)("h3",{id:"browserwindow"},"BrowserWindow"),(0,o.kt)("p",null,"Our entry file for the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," process will be very simple, we will create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserWindow"),", and\npinpoint the location of our ",(0,o.kt)("inlineCode",{parentName:"p"},"preload.js")," file by using ",(0,o.kt)("inlineCode",{parentName:"p"},"__dirname"),", which gives us an absolute path\nto our ",(0,o.kt)("inlineCode",{parentName:"p"},"main.js")," file, then by using ",(0,o.kt)("inlineCode",{parentName:"p"},"join(__dirname, 'preload.js')")," we receive absolute path to\n",(0,o.kt)("inlineCode",{parentName:"p"},"preload.js")," file. After getting this done, we need to tell Broker to listen and send messages to our\n",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserWindow"),", so we pass its reference to ",(0,o.kt)("inlineCode",{parentName:"p"},"browserWindows")," array in config object of\n",(0,o.kt)("inlineCode",{parentName:"p"},"BrokerFactory.createMainBroker()")," function. And finally, we call ",(0,o.kt)("inlineCode",{parentName:"p"},"broker.start()")," method to start ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker"),"\ninstance."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{14,18-20,22} title="src/main/main.ts"',"{14,18-20,22}":!0,title:'"src/main/main.ts"'},"import 'reflect-metadata';\nimport { Broker, BrokerFactory } from 'electron-broker';\nimport { app, BrowserWindow } from 'electron';\nimport { join } from 'path';\n\nlet mainWindow: BrowserWindow;\nlet broker: Broker;\n\nasync function bootstrap() {\n  mainWindow = new BrowserWindow({\n    width: 1024,\n    heigt: 728,\n    webPreferences: {\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  broker = await BrokerFactory.createMainBroker({\n    browserWindows: [mainWindow],\n  });\n\n  broker.start();\n\n  mainWindow.loadFile('./src/renderer/index.html');\n}\n\napp.whenReady().then(bootstrap);\n"))),(0,o.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'{14,18-20,22} title="src/main.js"',"{14,18-20,22}":!0,title:'"src/main.js"'},"import 'reflect-metadata';\nimport { Broker, BrokerFactory } from 'electron-broker';\nimport { app, BrowserWindow } from 'electron';\nimport { join } from 'path';\n\nlet mainWindow;\nlet broker;\n\nasync function bootstrap() {\n  mainWindow = new BrowserWindow({\n    width: 1024,\n    heigt: 728,\n    webPreferences: {\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  broker = await BrokerFactory.createMainBroker({\n    browserWindows: [mainWindow],\n  });\n\n  broker.start();\n\n  mainWindow.loadFile('./src/renderer/index.html');\n}\n\napp.whenReady().then(bootstrap);\n")))),(0,o.kt)("h3",{id:"childprocess"},"ChildProcess"),(0,o.kt)("p",null,"Besides ",(0,o.kt)("inlineCode",{parentName:"p"},"BrowserWindow")," binding, ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," also supports binding of ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildProcess")," by providing its reference to\nconfig object. Let's assume that we already have a pre-bundled javascript file in ",(0,o.kt)("inlineCode",{parentName:"p"},"./webpack/child.js")," directory\nof our project, and we are going to spawn a ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildProcess")," with that file, then we are going to bind it\nto our ",(0,o.kt)("inlineCode",{parentName:"p"},"Broker")," and start its instance."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{20,24,27} title="src/main/main.ts"',"{20,24,27}":!0,title:'"src/main/main.ts"'},"import 'reflect-metadata';\nimport { Broker, BrokerFactory } from 'electron-broker';\nimport { app, BrowserWindow } from 'electron';\nimport { join } from 'path';\nimport { ChildProcess, fork } from 'child_process';\n\nlet mainWindow: BrowserWindow;\nlet broker: Broker;\nlet childProcess: ChildProcess;\n\nasync function bootstrap() {\n  mainWindow = new BrowserWindow({\n    width: 1024,\n    heigt: 728,\n    webPreferences: {\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  childProcess = fork('./webpack/child.js', [], { silent: false });\n\n  broker = await BrokerFactory.createMainBroker({\n    browserWindows: [mainWindow],\n    processes: [childProcess],\n  });\n\n  broker.start();\n\n  mainWindow.loadFile('./src/renderer/index.html');\n}\n\napp.whenReady().then(bootstrap);\n"))),(0,o.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'{20,24,27} title="src/main.js"',"{20,24,27}":!0,title:'"src/main.js"'},"import 'reflect-metadata';\nimport { Broker, BrokerFactory } from 'electron-broker';\nimport { app, BrowserWindow } from 'electron';\nimport { join } from 'path';\nimport { ChildProcess, fork } from 'child_process';\n\nlet mainWindow;\nlet broker;\nlet childProcess;\n\nasync function bootstrap() {\n  mainWindow = new BrowserWindow({\n    width: 1024,\n    heigt: 728,\n    webPreferences: {\n      preload: join(__dirname, 'preload.js'),\n    },\n  });\n\n  childProcess = fork('./webpack/child.js', [], { silent: false });\n\n  broker = await BrokerFactory.createMainBroker({\n    browserWindows: [mainWindow],\n    processes: [childProcess],\n  });\n\n  broker.start();\n\n  mainWindow.loadFile('./src/renderer/index.html');\n}\n\napp.whenReady().then(bootstrap);\n")))))}f.isMDXComponent=!0}}]);